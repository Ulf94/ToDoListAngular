{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/task-api.service\";\nimport * as i2 from \"src/app/services/user.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction AddEditTaskComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const type_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r4.categoryName);\n  }\n}\n\nfunction AddEditTaskComponent_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const status_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_r5.statusOption);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(status_r5.statusOption);\n  }\n}\n\nfunction AddEditTaskComponent_button_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function AddEditTaskComponent_button_21_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.addTask();\n    });\n    i0.ɵɵtext(1, \" Add \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddEditTaskComponent_button_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function AddEditTaskComponent_button_22_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.updateTask();\n    });\n    i0.ɵɵtext(1, \" Update \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let AddEditTaskComponent = /*#__PURE__*/(() => {\n  class AddEditTaskComponent {\n    constructor(service, userService) {\n      this.service = service;\n      this.userService = userService;\n      this.id = 0;\n      this.taskName = \"\";\n      this.categoryTypeId = 0;\n      this.taskDescription = \"\";\n      this.status = \"\";\n      this.addedByUserId = 0;\n    }\n\n    ngOnInit() {\n      this.id = this.task.id;\n      this.taskName = this.task.taskName;\n      this.categoryTypeId = this.task.categoryTypeId;\n      this.taskDescription = this.task.taskDescription;\n      this.status = this.task.status;\n      this.addedByUserId = this.task.addedByUserId;\n      this.statusList$ = this.service.getStatusList();\n      this.taskList$ = this.service.getTasksList();\n      this.categoryTypesList$ = this.service.getCategoryTypesList();\n    }\n\n    addTask() {\n      var task = {\n        taskName: this.taskName,\n        taskDescription: this.taskDescription,\n        categoryTypeId: this.categoryTypeId,\n        status: this.status,\n        addedByUserId: this.userService.getUserId(),\n        responsibleUserId: null // todo\n\n      };\n      this.service.addTask(task).subscribe(result => {\n        var closeModalBtn = document.getElementById('add-edit-modal-close');\n\n        if (closeModalBtn) {\n          closeModalBtn.click();\n        }\n\n        var showAddSuccess = document.getElementById('add-success-alert');\n\n        if (showAddSuccess) {\n          showAddSuccess.style.display = \"block\";\n        }\n\n        setTimeout(function () {\n          if (showAddSuccess) {\n            showAddSuccess.style.display = \"none\";\n          }\n        }, 4000);\n      }, error => {\n        console.log(\"Not added\");\n        var closeModalBtn = document.getElementById('add-edit-modal-close');\n\n        if (closeModalBtn) {\n          closeModalBtn.click();\n        }\n\n        var showAddFailed = document.getElementById('add-failed-alert');\n\n        if (showAddFailed) {\n          showAddFailed.style.display = \"block\";\n        }\n\n        setTimeout(function () {\n          if (showAddFailed) {\n            showAddFailed.style.display = \"none\";\n          }\n        }, 4000);\n      });\n    }\n\n    updateTask() {\n      var task = {\n        id: this.id,\n        taskName: this.taskName,\n        taskDescription: this.taskDescription,\n        categoryTypeId: this.categoryTypeId,\n        status: this.status,\n        addedByUserId: this.addedByUserId,\n        responsibleUserId: null // todo\n\n      };\n      var id = this.id;\n      this.service.updateTask(id, task).subscribe(resulet => {\n        var closeModalBtn = document.getElementById('add-edit-modal-close');\n\n        if (closeModalBtn) {\n          closeModalBtn.click();\n        }\n\n        var showUpdateSuccess = document.getElementById('add-update-alert');\n\n        if (showUpdateSuccess) {\n          showUpdateSuccess.style.display = \"block\";\n        }\n\n        setTimeout(function () {\n          if (showUpdateSuccess) {\n            showUpdateSuccess.style.display = \"none\";\n          }\n        }, 4000);\n      });\n    }\n\n  }\n\n  AddEditTaskComponent.ɵfac = function AddEditTaskComponent_Factory(t) {\n    return new (t || AddEditTaskComponent)(i0.ɵɵdirectiveInject(i1.TaskApiService), i0.ɵɵdirectiveInject(i2.UserService));\n  };\n\n  AddEditTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditTaskComponent,\n    selectors: [[\"app-add-edit-task\"]],\n    inputs: {\n      task: \"task\"\n    },\n    decls: 23,\n    vars: 12,\n    consts: [[1, \"mb-3\"], [\"for\", \"taskName\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"taskName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"categoryTypeId\", 1, \"form-label\"], [\"name\", \"categoryTypeId\", \"id\", \"categoryTypeId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"status\", 1, \"form-label\"], [\"name\", \"status\", \"id\", \"status\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"taskDescription\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"taskDescription\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"btn btn-primary\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-secondary\", 3, \"click\", 4, \"ngIf\"], [3, \"value\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"]],\n    template: function AddEditTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelementStart(2, \"label\", 1);\n        i0.ɵɵtext(3, \"Task name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function AddEditTaskComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.taskName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 0);\n        i0.ɵɵelementStart(6, \"label\", 3);\n        i0.ɵɵtext(7, \"Category type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"select\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function AddEditTaskComponent_Template_select_ngModelChange_8_listener($event) {\n          return ctx.categoryTypeId = $event;\n        });\n        i0.ɵɵtemplate(9, AddEditTaskComponent_option_9_Template, 2, 2, \"option\", 5);\n        i0.ɵɵpipe(10, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 0);\n        i0.ɵɵelementStart(12, \"label\", 6);\n        i0.ɵɵtext(13, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"select\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function AddEditTaskComponent_Template_select_ngModelChange_14_listener($event) {\n          return ctx.status = $event;\n        });\n        i0.ɵɵtemplate(15, AddEditTaskComponent_option_15_Template, 2, 2, \"option\", 5);\n        i0.ɵɵpipe(16, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 0);\n        i0.ɵɵelementStart(18, \"label\", 8);\n        i0.ɵɵtext(19, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function AddEditTaskComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.taskDescription = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(21, AddEditTaskComponent_button_21_Template, 2, 0, \"button\", 10);\n        i0.ɵɵtemplate(22, AddEditTaskComponent_button_22_Template, 2, 0, \"button\", 11);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.taskName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.categoryTypeId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(10, 8, ctx.categoryTypesList$));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.status);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(16, 10, ctx.statusList$));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.taskDescription);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.task.id == 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.task.id != 0);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i3.SelectControlValueAccessor, i4.NgForOf, i4.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption],\n    pipes: [i4.AsyncPipe],\n    styles: [\"\"]\n  });\n  return AddEditTaskComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}