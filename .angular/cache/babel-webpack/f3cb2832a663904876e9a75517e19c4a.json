{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.taskAPIUrl = \"https://taskmanagermaz.azurewebsites.net/api\";\n      this.isAuthenticated = false;\n      this.isAdmin = false;\n      this.loggedUserName = \"\";\n      this.loggedRole = \"\";\n\n      if (localStorage.getItem(\"userName\") != null) {\n        this.loggedUserName = localStorage.getItem(\"userName\");\n        this.loggedRole = localStorage.getItem(\"userRole\");\n        this.isAuthenticated = true;\n\n        if (localStorage.getItem(\"userRole\") == \"Admin\") {\n          this.isAdmin = true;\n          console.log(\"He's admin\");\n        }\n      } else {\n        this.loggedUserName = null;\n        this.loggedRole = null;\n        this.isAuthenticated = false;\n        this.isAdmin = false;\n      }\n    }\n\n    loginUser(userLogin) {\n      return this.http.post(this.taskAPIUrl + \"/UserLogin\", userLogin).subscribe(res => {\n        this.isAuthenticated = true;\n        localStorage.setItem('token', res.token);\n        this.currentUser();\n        console.log(\"Logged. Checking role\");\n        this.router.navigate(['']);\n      }, err => {\n        console.log(err);\n      });\n    }\n\n    logoutUser() {\n      localStorage.removeItem('token');\n      localStorage.removeItem('userName');\n      localStorage.removeItem('userId');\n      localStorage.removeItem('userRole');\n      this.loggedUserName = null;\n      this.loggedRole = null;\n      this.isAuthenticated = false;\n      this.isAdmin = false;\n      this.router.navigate(['']);\n    }\n\n    currentUser() {\n      return this.http.get(this.taskAPIUrl + \"/UserLogin/getCurrentUser\", {\n        withCredentials: true\n      }).subscribe(res => {\n        localStorage.setItem('userId', res.userId);\n        localStorage.setItem('userName', res.userName);\n        localStorage.setItem('userRole', res.userRole);\n        this.loggedUserName = localStorage.getItem(\"userName\");\n        this.loggedRole = localStorage.getItem(\"userRole\");\n        this.isAdministrator();\n      });\n    }\n\n    getToken() {\n      return localStorage.getItem(\"token\");\n    }\n\n    registerUser(user) {\n      return this.http.post(this.taskAPIUrl + \"/UserRegister\", user);\n    }\n\n    isLogged() {\n      return this.isAuthenticated;\n    }\n\n    isAdministrator() {\n      if (localStorage.getItem(\"userName\") == \"Admin\") {\n        this.isAdmin = true;\n        console.log(\"He's admin\");\n        return true;\n      } else {\n        this.isAdmin = false;\n        return false;\n      }\n    }\n\n    getUserId() {\n      return localStorage.getItem(\"userId\");\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}